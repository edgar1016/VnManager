// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using System;
using VisualNovelManagerv2.EF.Data.Context;

namespace VisualNovelManagerv2.EF.Data.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20170820214912_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("VisualNovelManagerv2.EF.Data.Entity.VnCharacter.VnCharacter", b =>
                {
                    b.Property<int>("PkId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Aliases");

                    b.Property<string>("Birthday");

                    b.Property<string>("BloodType");

                    b.Property<int?>("Bust");

                    b.Property<int?>("CharacterId");

                    b.Property<string>("Description");

                    b.Property<string>("Gender");

                    b.Property<int?>("Height");

                    b.Property<int?>("Hip");

                    b.Property<string>("ImageLink");

                    b.Property<string>("Name");

                    b.Property<string>("Original");

                    b.Property<int?>("VnId");

                    b.Property<int?>("VnInfoPkId");

                    b.Property<int?>("Waist");

                    b.Property<int?>("Weight");

                    b.HasKey("PkId");

                    b.HasIndex("VnInfoPkId");

                    b.ToTable("VnCharacter");
                });

            modelBuilder.Entity("VisualNovelManagerv2.EF.Data.Entity.VnCharacter.VnCharacterTraits", b =>
                {
                    b.Property<int>("PkId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CharacterId");

                    b.Property<string>("SpoilerLevel");

                    b.Property<int?>("TraitId");

                    b.Property<string>("TraitName");

                    b.Property<int?>("VnCharacterPkId");

                    b.HasKey("PkId");

                    b.HasIndex("VnCharacterPkId");

                    b.ToTable("VnCharacterTraits");
                });

            modelBuilder.Entity("VisualNovelManagerv2.EF.Data.Entity.VnCharacter.VnCharacterVns", b =>
                {
                    b.Property<int>("PkId");

                    b.Property<int?>("CharacterId");

                    b.Property<int?>("ReleaseId");

                    b.Property<string>("Role");

                    b.Property<string>("SpoilerLevel");

                    b.Property<int?>("VnId");

                    b.HasKey("PkId");

                    b.ToTable("VnCharacterVns");
                });

            modelBuilder.Entity("VisualNovelManagerv2.EF.Data.Entity.VnInfo.VnInfo", b =>
                {
                    b.Property<int>("PkId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Aliases");

                    b.Property<string>("Description");

                    b.Property<string>("ImageLink");

                    b.Property<string>("ImageNsfw");

                    b.Property<string>("Languages");

                    b.Property<string>("Length");

                    b.Property<string>("Original");

                    b.Property<string>("OriginalLanguage");

                    b.Property<string>("Platforms");

                    b.Property<double?>("Popularity");

                    b.Property<int?>("Rating");

                    b.Property<string>("Released");

                    b.Property<string>("Title");

                    b.Property<int>("VnId");

                    b.HasKey("PkId");

                    b.ToTable("VnInfo");
                });

            modelBuilder.Entity("VisualNovelManagerv2.EF.Data.Entity.VnInfo.VnInfoAnime", b =>
                {
                    b.Property<int>("PkId");

                    b.Property<int?>("AniDbId");

                    b.Property<string>("AniNfoId");

                    b.Property<string>("AnimeType");

                    b.Property<int?>("AnnId");

                    b.Property<string>("TitleEng");

                    b.Property<string>("TitleJpn");

                    b.Property<int?>("VnId");

                    b.Property<string>("Year");

                    b.HasKey("PkId");

                    b.ToTable("VnInfoAnime");
                });

            modelBuilder.Entity("VisualNovelManagerv2.EF.Data.Entity.VnInfo.VnInfoLinks", b =>
                {
                    b.Property<int>("PkId");

                    b.Property<string>("Encubed");

                    b.Property<string>("Renai");

                    b.Property<int?>("VnId");

                    b.Property<string>("Wikipedia");

                    b.HasKey("PkId");

                    b.ToTable("VnInfoLinks");
                });

            modelBuilder.Entity("VisualNovelManagerv2.EF.Data.Entity.VnInfo.VnInfoRelations", b =>
                {
                    b.Property<int>("PkId");

                    b.Property<string>("Official");

                    b.Property<string>("Original");

                    b.Property<string>("Relation");

                    b.Property<int?>("RelationId");

                    b.Property<string>("Title");

                    b.Property<int?>("VnId");

                    b.HasKey("PkId");

                    b.ToTable("VnInfoRelations");
                });

            modelBuilder.Entity("VisualNovelManagerv2.EF.Data.Entity.VnInfo.VnInfoScreens", b =>
                {
                    b.Property<int>("PkId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("Height");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("Nsfw");

                    b.Property<string>("ReleaseId");

                    b.Property<int?>("VnId");

                    b.Property<int?>("VnInfoPkId");

                    b.Property<int?>("VnInfoPkId1");

                    b.Property<int?>("Width");

                    b.HasKey("PkId");

                    b.HasIndex("VnInfoPkId")
                        .IsUnique();

                    b.HasIndex("VnInfoPkId1");

                    b.ToTable("VnInfoScreens");
                });

            modelBuilder.Entity("VisualNovelManagerv2.EF.Data.Entity.VnInfo.VnInfoStaff", b =>
                {
                    b.Property<int>("PkId");

                    b.Property<int?>("AliasId");

                    b.Property<string>("Name");

                    b.Property<string>("Note");

                    b.Property<string>("Original");

                    b.Property<string>("Role");

                    b.Property<int?>("StaffId");

                    b.Property<int?>("VnId");

                    b.HasKey("PkId");

                    b.ToTable("VnInfoStaff");
                });

            modelBuilder.Entity("VisualNovelManagerv2.EF.Data.Entity.VnInfo.VnInfoTags", b =>
                {
                    b.Property<int>("PkId")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Score");

                    b.Property<string>("Spoiler");

                    b.Property<int?>("TagId");

                    b.Property<string>("TagName");

                    b.Property<int?>("VnId");

                    b.Property<int?>("VnInfoPkId");

                    b.HasKey("PkId");

                    b.HasIndex("VnInfoPkId");

                    b.ToTable("VnInfoTags");
                });

            modelBuilder.Entity("VisualNovelManagerv2.EF.Data.Entity.VnOther.Categories", b =>
                {
                    b.Property<int>("PkId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Category");

                    b.Property<string>("Created");

                    b.HasKey("PkId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("VisualNovelManagerv2.EF.Data.Entity.VnOther.VnUserData", b =>
                {
                    b.Property<int>("PkId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ExePath");

                    b.Property<string>("IconPath");

                    b.Property<string>("LastPlayed");

                    b.Property<string>("PlayTime");

                    b.Property<int?>("VnId");

                    b.HasKey("PkId");

                    b.ToTable("VnUserData");
                });

            modelBuilder.Entity("VisualNovelManagerv2.EF.Data.Entity.VnOther.VnUserDataCategories", b =>
                {
                    b.Property<int>("PkId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("Category");

                    b.Property<int?>("VnId");

                    b.HasKey("PkId");

                    b.ToTable("VnUserDataCategories");
                });

            modelBuilder.Entity("VisualNovelManagerv2.EF.Data.Entity.VnProducer.VnProducer", b =>
                {
                    b.Property<int>("PkId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Aliases");

                    b.Property<string>("Description");

                    b.Property<string>("Language");

                    b.Property<string>("Name");

                    b.Property<string>("Original");

                    b.Property<int?>("ProducerId");

                    b.Property<string>("ProducerType");

                    b.HasKey("PkId");

                    b.ToTable("VnProducer");
                });

            modelBuilder.Entity("VisualNovelManagerv2.EF.Data.Entity.VnProducer.VnProducerLinks", b =>
                {
                    b.Property<int>("PkId");

                    b.Property<string>("Homepage");

                    b.Property<int?>("ProducerId");

                    b.Property<string>("Wikipedia");

                    b.HasKey("PkId");

                    b.ToTable("VnProducerLinks");
                });

            modelBuilder.Entity("VisualNovelManagerv2.EF.Data.Entity.VnProducer.VnProducerRelations", b =>
                {
                    b.Property<int>("PkId");

                    b.Property<string>("Name");

                    b.Property<string>("Original");

                    b.Property<int?>("ProducerId");

                    b.Property<string>("Relation");

                    b.Property<int?>("RelationId");

                    b.HasKey("PkId");

                    b.ToTable("VnProducerRelations");
                });

            modelBuilder.Entity("VisualNovelManagerv2.EF.Data.Entity.VnRelease.VnRelease", b =>
                {
                    b.Property<int>("PkId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Animation");

                    b.Property<string>("Catalog");

                    b.Property<string>("Doujin");

                    b.Property<string>("Freeware");

                    b.Property<string>("Gtin");

                    b.Property<string>("Languages");

                    b.Property<int?>("MinAge");

                    b.Property<string>("Notes");

                    b.Property<string>("Original");

                    b.Property<string>("Patch");

                    b.Property<string>("Platforms");

                    b.Property<int?>("ReleaseId");

                    b.Property<string>("ReleaseType");

                    b.Property<string>("Released");

                    b.Property<string>("Resolution");

                    b.Property<string>("Title");

                    b.Property<int?>("VnId");

                    b.Property<int?>("VnInfoPkId");

                    b.Property<int?>("VnReleaseMediaPkId");

                    b.Property<int?>("VnReleaseProducersPkId");

                    b.Property<int?>("VnReleaseVnPkId");

                    b.Property<string>("Voiced");

                    b.Property<string>("Website");

                    b.HasKey("PkId");

                    b.HasIndex("VnInfoPkId");

                    b.HasIndex("VnReleaseMediaPkId");

                    b.HasIndex("VnReleaseProducersPkId");

                    b.HasIndex("VnReleaseVnPkId");

                    b.ToTable("VnRelease");
                });

            modelBuilder.Entity("VisualNovelManagerv2.EF.Data.Entity.VnRelease.VnReleaseMedia", b =>
                {
                    b.Property<int>("PkId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Medium");

                    b.Property<int?>("Quantity");

                    b.Property<int?>("ReleaseId");

                    b.HasKey("PkId");

                    b.ToTable("VnReleaseMedia");
                });

            modelBuilder.Entity("VisualNovelManagerv2.EF.Data.Entity.VnRelease.VnReleaseProducers", b =>
                {
                    b.Property<int>("PkId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Developer");

                    b.Property<string>("Name");

                    b.Property<string>("Original");

                    b.Property<int?>("ProducerId");

                    b.Property<string>("ProducerType");

                    b.Property<string>("Publisher");

                    b.Property<int?>("ReleaseId");

                    b.HasKey("PkId");

                    b.ToTable("VnReleaseProducers");
                });

            modelBuilder.Entity("VisualNovelManagerv2.EF.Data.Entity.VnRelease.VnReleaseVn", b =>
                {
                    b.Property<int>("PkId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("Original");

                    b.Property<int?>("ReleaseId");

                    b.Property<int?>("VnId");

                    b.HasKey("PkId");

                    b.ToTable("VnReleaseVn");
                });

            modelBuilder.Entity("VisualNovelManagerv2.EF.Data.Entity.VnStaff.VnStaff", b =>
                {
                    b.Property<int>("PkId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Gender");

                    b.Property<string>("Language");

                    b.Property<int?>("MainAlias");

                    b.Property<string>("Name");

                    b.Property<string>("Original");

                    b.Property<int?>("StaffId");

                    b.HasKey("PkId");

                    b.ToTable("VnStaff");
                });

            modelBuilder.Entity("VisualNovelManagerv2.EF.Data.Entity.VnStaff.VnStaffAliases", b =>
                {
                    b.Property<int>("PkId");

                    b.Property<int?>("AliasId");

                    b.Property<string>("Name");

                    b.Property<string>("Original");

                    b.Property<int?>("StaffId");

                    b.HasKey("PkId");

                    b.ToTable("VnStaffAliases");
                });

            modelBuilder.Entity("VisualNovelManagerv2.EF.Data.Entity.VnStaff.VnStaffLinks", b =>
                {
                    b.Property<int>("PkId");

                    b.Property<string>("AniDb");

                    b.Property<string>("Homepage");

                    b.Property<int?>("StaffId");

                    b.Property<string>("Twitter");

                    b.Property<string>("Wikipedia");

                    b.HasKey("PkId");

                    b.ToTable("VnStaffLinks");
                });

            modelBuilder.Entity("VisualNovelManagerv2.EF.Data.Entity.VnTagTrait.VnTagData", b =>
                {
                    b.Property<int>("PkId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Aliases");

                    b.Property<string>("Cat");

                    b.Property<string>("Description");

                    b.Property<string>("Meta");

                    b.Property<string>("Name");

                    b.Property<string>("Parents");

                    b.Property<int?>("TagId");

                    b.Property<int?>("Vns");

                    b.HasKey("PkId");

                    b.ToTable("VnTagData");
                });

            modelBuilder.Entity("VisualNovelManagerv2.EF.Data.Entity.VnTagTrait.VnTraitData", b =>
                {
                    b.Property<int>("PkId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Aliases");

                    b.Property<int?>("Chars");

                    b.Property<string>("Description");

                    b.Property<string>("Meta");

                    b.Property<string>("Name");

                    b.Property<string>("Parents");

                    b.Property<int?>("TraitId");

                    b.HasKey("PkId");

                    b.ToTable("VnTraitData");
                });

            modelBuilder.Entity("VisualNovelManagerv2.EF.Data.Entity.VnUserList.VnVisualNovelList", b =>
                {
                    b.Property<int>("PkId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Added");

                    b.Property<string>("Notes");

                    b.Property<string>("Status");

                    b.Property<int>("UserId");

                    b.Property<int>("VnId");

                    b.HasKey("PkId");

                    b.ToTable("VnVisualNovelList");
                });

            modelBuilder.Entity("VisualNovelManagerv2.EF.Data.Entity.VnUserList.VnVoteList", b =>
                {
                    b.Property<int>("PkId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Added");

                    b.Property<int>("UserId");

                    b.Property<int>("VnId");

                    b.Property<int>("Vote");

                    b.HasKey("PkId");

                    b.ToTable("VnVoteList");
                });

            modelBuilder.Entity("VisualNovelManagerv2.EF.Data.Entity.VnUserList.VnWishList", b =>
                {
                    b.Property<int>("PkId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Added");

                    b.Property<string>("Priority");

                    b.Property<int>("UserId");

                    b.Property<int>("VnId");

                    b.HasKey("PkId");

                    b.ToTable("VnWishList");
                });

            modelBuilder.Entity("VisualNovelManagerv2.EF.Data.Entity.VnCharacter.VnCharacter", b =>
                {
                    b.HasOne("VisualNovelManagerv2.EF.Data.Entity.VnInfo.VnInfo")
                        .WithMany("VnCharacters")
                        .HasForeignKey("VnInfoPkId");
                });

            modelBuilder.Entity("VisualNovelManagerv2.EF.Data.Entity.VnCharacter.VnCharacterTraits", b =>
                {
                    b.HasOne("VisualNovelManagerv2.EF.Data.Entity.VnCharacter.VnCharacter")
                        .WithMany("VnCharacterTraits")
                        .HasForeignKey("VnCharacterPkId");
                });

            modelBuilder.Entity("VisualNovelManagerv2.EF.Data.Entity.VnCharacter.VnCharacterVns", b =>
                {
                    b.HasOne("VisualNovelManagerv2.EF.Data.Entity.VnCharacter.VnCharacter")
                        .WithOne("VnCharacterVns")
                        .HasForeignKey("VisualNovelManagerv2.EF.Data.Entity.VnCharacter.VnCharacterVns", "PkId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VisualNovelManagerv2.EF.Data.Entity.VnInfo.VnInfoAnime", b =>
                {
                    b.HasOne("VisualNovelManagerv2.EF.Data.Entity.VnInfo.VnInfo")
                        .WithOne("VnInfoAnime")
                        .HasForeignKey("VisualNovelManagerv2.EF.Data.Entity.VnInfo.VnInfoAnime", "PkId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VisualNovelManagerv2.EF.Data.Entity.VnInfo.VnInfoLinks", b =>
                {
                    b.HasOne("VisualNovelManagerv2.EF.Data.Entity.VnInfo.VnInfo")
                        .WithOne("VnInfoLinks")
                        .HasForeignKey("VisualNovelManagerv2.EF.Data.Entity.VnInfo.VnInfoLinks", "PkId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VisualNovelManagerv2.EF.Data.Entity.VnInfo.VnInfoRelations", b =>
                {
                    b.HasOne("VisualNovelManagerv2.EF.Data.Entity.VnInfo.VnInfo")
                        .WithOne("VnInfoRelations")
                        .HasForeignKey("VisualNovelManagerv2.EF.Data.Entity.VnInfo.VnInfoRelations", "PkId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VisualNovelManagerv2.EF.Data.Entity.VnInfo.VnInfoScreens", b =>
                {
                    b.HasOne("VisualNovelManagerv2.EF.Data.Entity.VnInfo.VnInfo")
                        .WithOne("VnInfoScreens")
                        .HasForeignKey("VisualNovelManagerv2.EF.Data.Entity.VnInfo.VnInfoScreens", "VnInfoPkId");

                    b.HasOne("VisualNovelManagerv2.EF.Data.Entity.VnInfo.VnInfo")
                        .WithMany("VnInfoScreensCollection")
                        .HasForeignKey("VnInfoPkId1");
                });

            modelBuilder.Entity("VisualNovelManagerv2.EF.Data.Entity.VnInfo.VnInfoStaff", b =>
                {
                    b.HasOne("VisualNovelManagerv2.EF.Data.Entity.VnInfo.VnInfo")
                        .WithOne("VnInfoStaff")
                        .HasForeignKey("VisualNovelManagerv2.EF.Data.Entity.VnInfo.VnInfoStaff", "PkId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VisualNovelManagerv2.EF.Data.Entity.VnInfo.VnInfoTags", b =>
                {
                    b.HasOne("VisualNovelManagerv2.EF.Data.Entity.VnInfo.VnInfo")
                        .WithMany("VnInfoTags")
                        .HasForeignKey("VnInfoPkId");
                });

            modelBuilder.Entity("VisualNovelManagerv2.EF.Data.Entity.VnProducer.VnProducerLinks", b =>
                {
                    b.HasOne("VisualNovelManagerv2.EF.Data.Entity.VnProducer.VnProducer")
                        .WithOne("VnProducerLinks")
                        .HasForeignKey("VisualNovelManagerv2.EF.Data.Entity.VnProducer.VnProducerLinks", "PkId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VisualNovelManagerv2.EF.Data.Entity.VnProducer.VnProducerRelations", b =>
                {
                    b.HasOne("VisualNovelManagerv2.EF.Data.Entity.VnProducer.VnProducer")
                        .WithOne("VnProducerRelations")
                        .HasForeignKey("VisualNovelManagerv2.EF.Data.Entity.VnProducer.VnProducerRelations", "PkId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VisualNovelManagerv2.EF.Data.Entity.VnRelease.VnRelease", b =>
                {
                    b.HasOne("VisualNovelManagerv2.EF.Data.Entity.VnInfo.VnInfo")
                        .WithMany("VnReleases")
                        .HasForeignKey("VnInfoPkId");

                    b.HasOne("VisualNovelManagerv2.EF.Data.Entity.VnRelease.VnReleaseMedia", "VnReleaseMedia")
                        .WithMany()
                        .HasForeignKey("VnReleaseMediaPkId");

                    b.HasOne("VisualNovelManagerv2.EF.Data.Entity.VnRelease.VnReleaseProducers", "VnReleaseProducers")
                        .WithMany()
                        .HasForeignKey("VnReleaseProducersPkId");

                    b.HasOne("VisualNovelManagerv2.EF.Data.Entity.VnRelease.VnReleaseVn", "VnReleaseVn")
                        .WithMany()
                        .HasForeignKey("VnReleaseVnPkId");
                });

            modelBuilder.Entity("VisualNovelManagerv2.EF.Data.Entity.VnStaff.VnStaffAliases", b =>
                {
                    b.HasOne("VisualNovelManagerv2.EF.Data.Entity.VnStaff.VnStaff")
                        .WithOne("VnStaffAliases")
                        .HasForeignKey("VisualNovelManagerv2.EF.Data.Entity.VnStaff.VnStaffAliases", "PkId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VisualNovelManagerv2.EF.Data.Entity.VnStaff.VnStaffLinks", b =>
                {
                    b.HasOne("VisualNovelManagerv2.EF.Data.Entity.VnStaff.VnStaff")
                        .WithOne("VnStaffLinks")
                        .HasForeignKey("VisualNovelManagerv2.EF.Data.Entity.VnStaff.VnStaffLinks", "PkId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
